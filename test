local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HitboxExpanderGui"
screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 200)
frame.Position = UDim2.new(0.5, -150, 0.5, -100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = screenGui

-- Create the title bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
titleBar.BorderSizePixel = 0
titleBar.Parent = frame

-- Create the title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -60, 1, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "NeonHUB"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Parent = titleBar

-- Create the minimize button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -60, 0, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextScaled = true
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.Parent = titleBar

-- Create the close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -30, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.Font = Enum.Font.SourceSansBold
closeButton.Parent = titleBar

-- Create the slider frame
local sliderFrame = Instance.new("Frame")
sliderFrame.Size = UDim2.new(0, 250, 0, 30)
sliderFrame.Position = UDim2.new(0.5, -125, 0, 50)
sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderFrame.BorderSizePixel = 0
sliderFrame.Parent = frame

-- Create the slider button
local sliderButton = Instance.new("TextButton")
sliderButton.Size = UDim2.new(0, 20, 0, 30)
sliderButton.Position = UDim2.new(0, 0, 0, 0)
sliderButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
sliderButton.Text = ""
sliderButton.Parent = sliderFrame

-- Create the slider label
local sliderLabel = Instance.new("TextLabel")
sliderLabel.Size = UDim2.new(1, 0, 0, 30)
sliderLabel.Position = UDim2.new(0, 0, 0, 40)
sliderLabel.BackgroundTransparency = 1
sliderLabel.Text = "Hitbox Multiplier: 1x"
sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
sliderLabel.TextScaled = true
sliderLabel.Font = Enum.Font.SourceSans
sliderLabel.Parent = sliderFrame

-- Variables for dragging and slider
local isDraggingFrame = false
local isDraggingSlider = false
local minimized = false
local originalSize = frame.Size
local originalPos = frame.Position
local defaultHitboxSize = Vector3.new(2, 2, 1) -- Default humanoid hitbox size (HumanoidRootPart)
local hitboxMultiplier = 1

-- Function to update hitboxes
local function updateHitboxes(multiplier)
    for _, player in pairs(Players:GetPlayers()) do
        local character = player.Character
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                humanoidRootPart.Size = defaultHitboxSize * multiplier
            end
        end
    end
end

-- Slider functionality
sliderButton.MouseButton1Down:Connect(function()
    isDraggingSlider = true
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDraggingSlider = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if isDraggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = input.Position.X
        local sliderFrameX = sliderFrame.AbsolutePosition.X
        local newX = math.clamp(mouseX - sliderFrameX, 0, sliderFrame.AbsoluteSize.X - sliderButton.AbsoluteSize.X)
        sliderButton.Position = UDim2.new(0, newX, 0, 0)
        
        -- Calculate multiplier (1x to 5x)
        local sliderWidth = sliderFrame.AbsoluteSize.X - sliderButton.AbsoluteSize.X
        hitboxMultiplier = 1 + (newX / sliderWidth) * 4
        sliderLabel.Text = string.format("Hitbox Multiplier: %.1fx", hitboxMultiplier)
        
        -- Update hitboxes
        updateHitboxes(hitboxMultiplier)
    end
end)

-- Minimize button functionality
minimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        frame.Size = UDim2.new(0, 300, 0, 30)
        sliderFrame.Visible = false
    else
        frame.Size = originalSize
        sliderFrame.Visible = true
    end
end)

-- Close button functionality
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
    -- Reset hitboxes to default
    updateHitboxes(1)
end)

-- Dragging functionality for the frame
titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDraggingFrame = true
        local initialPos = input.Position
        local initialFramePos = frame.Position
        
        local connection
        connection = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement and isDraggingFrame then
                local delta = input.Position - initialPos
                frame.Position = UDim2.new(
                    initialFramePos.X.Scale,
                    initialFramePos.X.Offset + delta.X,
                    initialFramePos.Y.Scale,
                    initialFramePos.Y.Offset + delta.Y
                )
            end
        end)
        
        input:GetPropertyChangedSignal("UserInputState"):Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                isDraggingFrame = false
                connection:Disconnect()
            end
        end)
    end
end)

-- Update hitboxes when new players join or characters are added
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        humanoidRootPart.Size = defaultHitboxSize * hitboxMultiplier
    end)
end)

-- Initial hitbox setup for existing players
for _, player in pairs(Players:GetPlayers()) do
    if player.Character then
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.Size = defaultHitboxSize * hitboxMultiplier
        end
    end
end
